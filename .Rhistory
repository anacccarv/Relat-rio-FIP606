install.packages("see")
#install.packages("estimability")
library(see)
library(estimability)
pyra <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=465348652")
library(gsheet)
library(tidyverse)
library(lme4)
library(car)
library(performance)
library(DHARMa)
library(emmeans)
library(multcomp)
library(multcompView)
library(ggthemes)
library(patchwork)
pyra <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=465348652")
pyra2 <- pyra |>
group_by(code, state, dose) |>
summarise(mean_germination = mean(germination))
pyra2|>
ggplot(aes(dose, mean_germination))+
geom_point()+
facet_wrap(~code)
library(drc)
isolado186 <- pyra2 |>
filter(code == "186")
drc1 <- drm(mean_germination ~ dose, data = isolado186,
fct = W1.3())
AIC(drc1)
plot(drc1) #para visualizar se o ajuste está bom
ED(drc1, 50, interval = "delta")
summary(drc1)
isolado165 <- pyra |>
filter(code == "165")
drc2 <- drm(mean_germination ~ dose, data = isolado165,
fct = LL.3())
View(isolado165)
isolado165 <- pyra2 |>
filter(code == "165")
drc2 <- drm(mean_germination ~ dose, data = isolado165,
fct = LL.3())
AIC(drc2)
plot(drc2) #para visualizar se o ajuste está bom
ED(drc1, 50, interval = "delta")
library(ec50estimator)
df_ec50 <- estimate_EC50(mean_germination ~ dose,
data = pyra2,
isolate_col = "code",
interval = "delta",
fct = drc::LL.3())
df_ec50 |>
ggplot(aes(reorder(ID, Estimate), Estimate))+
geom_point()+
geom_errorbar(aes(ymin = Lower, ymax = Upper), width = 0.1)+
coord_flip()
print(df_ec50)
img2 <- img |>
dplyr::select(Assess, LeafDoctor, ImageJ)
library(gsheet)
library(tidyverse)
library(lme4)
library(car)
library(performance)
library(DHARMa)
library(emmeans)
library(multcomp)
library(multcompView)
library(ggthemes)
library(patchwork)
milho <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=1345524759")
milho |>
ggplot(aes(method, index))+
geom_jitter(width = 0.05, color = "grey")+
stat_summary(fun.data = "mean_cl_boot", size = 0.5,
alpha = 0.5, color = "blue")+
facet_wrap(~ hybrid)+
theme_classic()
milho |>
ggplot(aes(method, yield))+
geom_jitter(width = 0.05, color = "grey")+
stat_summary(fun.data = "mean_cl_boot", size = 0.5,
alpha = 0.5, color = "red")+
facet_wrap(~ hybrid)+
theme_classic()
library(gsheet)
library(tidyverse)
library(lme4)
library(car)
library(performance)
library(DHARMa)
library(emmeans)
library(multcomp)
library(multcompView)
library(ggthemes)
library(patchwork)
milho <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=1345524759")
milho |>
ggplot(aes(method, index))+
geom_jitter(width = 0.05, color = "grey")+
stat_summary(fun.data = "mean_cl_boot", size = 0.5,
alpha = 0.5, color = "blue")+
facet_wrap(~ hybrid)+
theme_classic()
milho |>
ggplot(aes(method, yield))+
geom_jitter(width = 0.05, color = "grey")+
stat_summary(fun.data = "mean_cl_boot", size = 0.5,
alpha = 0.5, color = "red")+
facet_wrap(~ hybrid)+
theme_classic()
milho <- milho |>
mutate(block = as.factor(block))
mix2 <- lmer(sqrt(index) ~hybrid*method  + block + (1|block/hybrid),
data = milho)
Anova(mix2)
check_normality(mix2)
check_heteroscedasticity(mix2)
plot(simulateResiduals(mix2))
qqnorm(residuals(mix2))
qqline(residuals(mix2))
hist(residuals(mix2))
#mesmo o Dharma dando problema, com o qqlinde e qqnorm os pontos estão próximos da linha, indicando normalidade, por isso, vamos prosseguir assumindo que as premissas foram atendidas.
medias_milho <- emmeans(mix2,
~ hybrid | method,
type = "response")
medias_milho2 <- emmeans(mix2,
~ method | hybrid,
type = "response")
cld(medias_milho, Letters = LETTERS)
cld(medias_milho2, Letters = LETTERS)
milho <- milho |>
mutate(block = as.factor(block))
mix3 <- lmer(sqrt(yield) ~hybrid*method  + block + (1|block/hybrid),
data = milho)
Anova(mix3)
check_normality(mix3)
check_heteroscedasticity(mix3)
plot(simulateResiduals(mix3))
qqnorm(residuals(mix3))
qqline(residuals(mix3))
hist(residuals(mix3))
#mesmo o Dharma dando problema, com o qqlinde e qqnorm os pontos estão próximos da linha, indicando normalidade, por isso, vamos prosseguir assumindo que as premissas foram atendidas.
medias_milho3 <- emmeans(mix3,
~ hybrid | method,
type = "response")
medias_milho4 <- emmeans(mix3,
~ method | hybrid,
type = "response")
cld(medias_milho3, Letters = LETTERS)
cld(medias_milho4, Letters = LETTERS)
estande <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=401662555")
estande |>
ggplot(aes(trat, nplants))+
geom_jitter(width = 0.05, color = "lightgrey")+
stat_summary(fun.data = "mean_cl_boot", size = 0.5, color = "black",
alpha = 0.5)+
geom_smooth(method = lm,
se = FALSE)+
facet_wrap(~exp)+
theme_clean()
estande |>
ggplot(aes(trat, nplants))+
geom_jitter(width = 0.05, color = "lightgrey")+
stat_summary(fun.data = "mean_cl_boot", size = 0.5, color = "blue",
alpha = 0.5)+
#geom_smooth(method = lm, se = FALSE)+
#facet_wrap(~exp)+
theme_clean()
exp1 <- estande |>
filter(exp == 1)
exp1 |>
ggplot(aes(trat, nplants))+
geom_point()+
ylim(0,100)+
geom_smooth(se = FALSE)
lm1 <- lm(nplants ~trat,
data = exp1)
summary(lm1)
exp2 <- estande |>
filter(exp == 2)
exp2 |>
ggplot(aes(trat, nplants))+
geom_point()+
ylim(0,100)+
geom_smooth(method = lm,
se = FALSE)
lm2 <- lm(nplants ~trat,
data = exp2)
summary(lm2)
exp2 |>
ggplot(aes(log(trat), nplants))+
geom_point()+
ylim(0,100)+
geom_smooth(se = FALSE)
glm2 <- glm(nplants ~trat, family = "gaussian",
data = exp2)
img2 <- img |>
dplyr::select(Assess, LeafDoctor, ImageJ)
img <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=373270992")
p1 <- img |>
ggplot(aes(Assess, ImageJ))+
geom_point()+
geom_smooth(method = "lm")
p2 <- img |>
ggplot(aes(Assess, LeafDoctor))+
geom_point()+
geom_smooth(method = "lm")
img |>
pivot_longer(3:5, names_to = "method",
values_to = "value") |>
ggplot(aes(method, value))+
geom_boxplot()
p1 + p2
img2 <- img |>
dplyr::select(Assess, LeafDoctor, ImageJ)
library(AgroR)
corgraph(img2)
cor.test(img$Assess, img$LeafDoctor)
cor(img$Assess, img$LeafDoctor)
library(corrplot)
cor_img2 <- cor(img2)
corrplot(cor_img2, method = 'number', type = "lower")
cor_img2 <- cor(img2)
corrplot(cor_img2, method = 'number', type = "upper")
corgraph(img2)
#Exemplo:
install.packages("tidyverse")
install.packages("tidyverse")
#Exemplo:
install.packages("remotes")
remotes::install_github("emdelponte/r4pde")
#Exemplo:
install.packages("tidyverse")
install.packages("tidyverse")
#Exemplo:
install.packages("tidyverse")
#Exemplo:
install.packages("tidyverse")
#Exemplo:
install.packages("remotes")
remotes::install_github("emdelponte/r4pde")
#Exemplo:
library(tidyverse)
install.packages("remotes")
install.packages("tidyverse")
#Exemplo:
install.packages("remotes")
#Exemplo:
install.packages('remotes', dependencies = TRUE)
install.packages("remotes", dependencies = TRUE)
#Exemplo:
utils::install.packages("remotes", dependencies = TRUE)
#Exemplo:
utils::install.packages("remotes", dependencies = TRUE)
utils::contrib.url(repos, "source")
df$speed
df <- data.frame(cars)
df$dist2 <- log(df$dist)
df$dist2 <- c(1:50)
# Usando o tidyverse:
library(tidyverse)
df|>
mutate(dist3 = dist2+1)
df$speed
# Usando o tidyverse:
df |>
select(speed)
df$speed
