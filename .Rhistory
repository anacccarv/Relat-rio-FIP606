REML = FALSE)
summary(mofo3)
img <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=373270992")
p1 <- img |>
ggplot(aes(Assess, ImageJ))+
geom_point()+
geom_smooth(method = "lm")
p2 <- img |>
ggplot(aes(Assess, LeafDoctor))+
geom_point()+
geom_smooth(method = "lm")
img |>
pivot_longer(3:5, names_to = "method",
values_to = "value") |>
ggplot(aes(method, value))+
geom_boxplot()
p1 + p2
glm3 <- stats::glm(nplants ~trat + (trat | exp), family = gaussian,
data = estande)
summary(glm3)
AIC(glm3)
glm3b <- stats::glm(nplants ~trat + (trat|exp), family = poisson(link = "log"),
data = estande)
summary(glm3b)
AIC(glm3b)
AIC(glm3b)
glm3 <- glm(nplants ~trat + (trat | exp), family = gaussian,
data = estande)
summary(glm3)
AIC(glm3)
glm3b <- glm(nplants ~trat + (trat|exp), family = poisson(link = "log"),
data = estande)
summary(glm3b)
AIC(glm3b)
glm3 <- glm(nplants ~trat + (trat | exp), family = gaussian,
data = estande)
summary(glm3)
AIC(glm3)
glm3b <- glm(nplants ~trat + (trat|exp), family = poisson(link = "log"),
data = estande)
summary(glm3b)
AIC(glm3b)
glm3 <- glm(nplants ~trat + (trat | exp), family = gaussian,
data = estande)
summary(glm3)
AIC(glm3)
glm3b <- glm(nplants ~trat + (trat|exp), family = poisson(link = "log"),
data = estande)
AIC(glm3b)
library(ggthemes)
library(gsheet)
library(tidyverse)
library(lme4)
library(car)
library(performance)
library(DHARMa)
library(emmeans)
library(multcomp)
library(multcompView)
library(patchwork)
campo <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1bq2N19DcZdtax2fQW9OHSGMR0X2__Z9T/edit#gid=866852711")
campo2 <- campo |>
dplyr::select(DFC, FER, PROD)
corgraph(campo2)
#remotes::install_github(("ropensci/rnaturalearthhires"))
library(rnaturalearth)
library(rnaturalearthhires)
BRA <- ne_states(country = "Brazil", #contorno dos estados
returnclass = "sf")
#remotes::install_github(("ropensci/rnaturalearthhires"))
library(rnaturalearth)
library(rnaturalearthhires)
BRA <- ne_states(country = "Brazil", #contorno dos estados
returnclass = "sf")
PERU <- ne_countries(country = "Peru",
returnclass = "sf") #contorno do país
library(tidyverse)
ggplot(BRA) +
geom_sf(fill = "black",
color = "yellow",
linewidth = 1)
library(r4pde)
sbr <- RustSoybean
library(ggthemes)
sbr |>
ggplot(aes(longitude, latitude))+
geom_point()+
coord_sf()
ggplot(BRA) +
geom_sf(fill = "black",
color = "yellow",
linewidth = 1)+
geom_point(data = sbr, aes(longitude, latitude), color = "red")+
theme_map()
MG <- BRA |>
filter(name_en == "Minas Gerais")
ggplot(BRA) +
geom_sf(fill = "black",
color = "yellow",
linewidth = 1)+
geom_sf(data = MG, fill = "white")  +
geom_point(data = sbr, aes(longitude, latitude), color = "red")+
theme_map()
library(ggspatial)
ggplot(BRA) +
geom_sf(fill = "black",
color = "yellow",
linewidth = 1)+
geom_sf(data = MG, fill = "white")+
geom_point(data = sbr, aes(longitude, latitude), color = "red")+
theme_map()+
annotation_north_arrow(which_north = "grid")
library(plotly)
# Cria o objeto ggplot que será usado na função ggplotly do pacote plotly:
bra <- ggplot(BRA) +
geom_sf(fill = "black",
color = "yellow",
linewidth = 1)+
geom_sf(data = MG, fill = "white")+
geom_point(data = sbr, aes(longitude, latitude), color = "red")+
theme_map()+
annotation_north_arrow(which_north = "grid")
ggplotly(bra)
library(leaflet)
# mapa base:
leaflet() |>
addTiles() |>
setView(lng = -42.8825, lat = -20.7546, zoom = 12)
# para mudar o tema do mapa usar o providers$
leaflet() |>
addProviderTiles(providers$Esri.NatGeoWorldMap)|>
setView(lng =-42.8825, lat = -20.7546, zoom = 10)
# para mostrar os pontos (dos experimentos Soybean Rust) no mapa:
leaflet(sbr) |>
addTiles() |>
setView(lng = -42.8825, lat = -20.7546, zoom = 5) |>
addCircleMarkers(radius = 2)
library(gsheet)
mapa <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1pAIFKsdKxk_UQQXdYwIO-O5NOkYNhpclImJcLziYnk4/edit?usp=sharing")
library(scatterpie)
library(ggrepel) #colocar o nome em cima de cada ponto
ggplot(BRA) +
geom_sf(fill = "gray70", alpha = 0.5, color = "white") +
coord_sf()+
geom_scatterpie(aes(x = lon, y = lat, r = 0.6), alpha = 0.8, color = NA, data = mapa,
cols = c("DFC",
"MA",
"FER",
"ANTR",
"OIDIO"))+
geom_text_repel(data = mapa, aes(lon, lat, label = Local),
size = 2, nudge_x = 0.2, nudge_y = 0.27, color = "gray30", family = "Arial") +
ggthemes::scale_fill_calc()+
ggthemes::theme_map() +
labs(x = "Longitude", y = "Latitude", legend = "", fill = "Doença")+
theme(legend.position = "bottom", text = element_text(family = "Arial", size = 8))
# para mudar o tema do mapa usar o providers$
leaflet() |>
addProviderTiles(providers$Esri.WorldStreetMap)|>
setView(lng =-42.8825, lat = -20.7546, zoom = 10)
# para mudar o tema do mapa usar o providers$
leaflet() |>
addTiles(providers$Esri.WorldStreetMap) |>
setView(lng = -42.8825, lat = -20.7546, zoom = 5)
library(leaflet)
# mapa base:
leaflet() |>
addTiles() |>
setView(lng = -42.8825, lat = -20.7546, zoom = 12)
# para mudar o tema do mapa usar o providers$
leaflet() |>
addTiles(providers$Esri.WorldStreetMap) |>
setView(lng = -42.8825, lat = -20.7546, zoom = 5)
# para mostrar os pontos (dos experimentos Soybean Rust) no mapa:
leaflet(sbr) |>
addTiles() |>
#setView(lng = -42.8825, lat = -20.7546, zoom = 5) |>
addCircleMarkers(radius = 2)
# para mostrar os pontos (dos experimentos Soybean Rust) no mapa:
leaflet(sbr) |>
addTiles() |>
setView(lng = -42.8825, lat = -20.7546, zoom = 5) |>
addCircleMarkers(radius = 2)
# para mostrar os pontos (dos experimentos Soybean Rust) no mapa:
leaflet(sbr) |>
addTiles() |>
setView(lng = -42.8825, lat = -20.7546, zoom = 5) |>
addCircleMarkers(radius = 2)
leaflet() |>
addTiles(providers$Esri.WorldStreetMap) |>
setView(lng = -42.8825, lat = -20.7546, zoom = 5)
leaflet() |>
addProviderTiles(providers$Esri.WorldStreetMap) |>
setView(lng = -42.8825, lat = -20.7546, zoom = 5)
leaflet() |>
addProviderTiles(providers$Esri.WorldStreetMap) |>
setView(lng = -42.8825, lat = -20.7546, zoom = 15)
leaflet() |>
addProviderTiles(providers$Esri.WorldStreetMap) |>
setView(lng = -42.8825, lat = -20.7546, zoom = 12)
# para mudar o tema do mapa usar o providers$
leaflet() |>
addTiles(providers$Esri.WorldStreetMap) |>
setView(lng = -42.8825, lat = -20.7546, zoom = 5)
# para mudar o tema do mapa usar o providers$
leaflet() |>
leaflet() |>
addTiles(providers$Esri.WorldStreetMap) |>
setView(lng = -42.8825, lat = -20.7546, zoom = 5)
# para mostrar os pontos (dos experimentos Soybean Rust) no mapa:
leaflet(sbr) |>
addTiles() |>
setView(lng = -42.8825, lat = -20.7546, zoom = 5) |>
addCircleMarkers(radius = 2)
# para mudar o tema do mapa usar o providers$
leaflet() |>
leaflet() |>
addTiles(providers$Esri.WorldStreetMap) |>
setView(lng = -42.8825, lat = -20.7546, zoom = 5)
#remotes::install_github(("ropensci/rnaturalearthhires"))
library(rnaturalearth)
library(rnaturalearthhires)
BRA <- ne_states(country = "Brazil", #contorno dos estados
returnclass = "sf")
PERU <- ne_countries(country = "Peru",
returnclass = "sf") #contorno do país
library(tidyverse)
ggplot(BRA) +
geom_sf(fill = "black",
color = "yellow",
linewidth = 1)
library(r4pde)
sbr <- RustSoybean
library(ggthemes)
sbr |>
ggplot(aes(longitude, latitude))+
geom_point()+
coord_sf()
ggplot(BRA) +
geom_sf(fill = "black",
color = "yellow",
linewidth = 1)+
geom_point(data = sbr, aes(longitude, latitude), color = "red")+
theme_map()
MG <- BRA |>
filter(name_en == "Minas Gerais")
ggplot(BRA) +
geom_sf(fill = "black",
color = "yellow",
linewidth = 1)+
geom_sf(data = MG, fill = "white")  +
geom_point(data = sbr, aes(longitude, latitude), color = "red")+
theme_map()
library(ggspatial)
ggplot(BRA) +
geom_sf(fill = "black",
color = "yellow",
linewidth = 1)+
geom_sf(data = MG, fill = "white")+
geom_point(data = sbr, aes(longitude, latitude), color = "red")+
theme_map()+
annotation_north_arrow(which_north = "grid")
library(plotly)
# Cria o objeto ggplot que será usado na função ggplotly do pacote plotly:
bra <- ggplot(BRA) +
geom_sf(fill = "black",
color = "yellow",
linewidth = 1)+
geom_sf(data = MG, fill = "white")+
geom_point(data = sbr, aes(longitude, latitude), color = "red")+
theme_map()+
annotation_north_arrow(which_north = "grid")
ggplotly(bra)
library(leaflet)
# mapa base:
leaflet() |>
addTiles() |>
setView(lng = -42.8825, lat = -20.7546, zoom = 12)
# para mudar o tema do mapa usar o providers$
leaflet() |>
leaflet() |>
addTiles(providers$Esri.WorldStreetMap) |>
setView(lng = -42.8825, lat = -20.7546, zoom = 5)
# para mostrar os pontos (dos experimentos Soybean Rust) no mapa:
leaflet(sbr) |>
addTiles() |>
setView(lng = -42.8825, lat = -20.7546, zoom = 5) |>
addCircleMarkers(radius = 2)
library(gsheet)
mapa <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1pAIFKsdKxk_UQQXdYwIO-O5NOkYNhpclImJcLziYnk4/edit?usp=sharing")
library(scatterpie)
library(ggrepel) #colocar o nome em cima de cada ponto
ggplot(BRA) +
geom_sf(fill = "gray70", alpha = 0.5, color = "white") +
coord_sf()+
geom_scatterpie(aes(x = lon, y = lat, r = 0.6), alpha = 0.8, color = NA, data = mapa,
cols = c("DFC",
"MA",
"FER",
"ANTR",
"OIDIO"))+
geom_text_repel(data = mapa, aes(lon, lat, label = Local),
size = 2, nudge_x = 0.2, nudge_y = 0.27, color = "gray30", family = "Arial") +
ggthemes::scale_fill_calc()+
ggthemes::theme_map() +
labs(x = "Longitude", y = "Latitude", legend = "", fill = "Doença")+
theme(legend.position = "bottom", text = element_text(family = "Arial", size = 8))
library(leaflet)
# mapa base:
leaflet() |>
addTiles() |>
setView(lng = -42.8825, lat = -20.7546, zoom = 12)
# para mudar o tema do mapa usar o providers$
leaflet() |>
leaflet() |>
addTiles(providers$Esri.WorldStreetMap) |>
setView(lng = -42.8825, lat = -20.7546, zoom = 5)
# para mudar o tema do mapa usar o providers$
leaflet() |>
addTiles(providers$Esri.WorldStreetMap) |>
setView(lng = -42.8825, lat = -20.7546, zoom = 5)
# para mudar o tema do mapa usar o providers$
leaflet() |>
addProviderTiles(providers$Esri.WorldStreetMap) |>
setView(lng = -42.8825, lat = -20.7546, zoom = 5)
# para mudar o tema do mapa usar o providers$
leaflet() |>
addProviderTiles(providers$Esri.WorldStreetMap) |>
setView(lng = -42.8825, lat = -20.7546, zoom = 5)
# para mostrar os pontos (dos experimentos Soybean Rust) no mapa:
leaflet(sbr) |>
addTiles() |>
setView(lng = -42.8825, lat = -20.7546, zoom = 5) |>
addCircleMarkers(radius = 2)
# para mostrar os pontos (dos experimentos Soybean Rust) no mapa:
leaflet(sbr) |>
addTiles() |>
setView(lng = -42.8825, lat = -20.7546, zoom = 5) |>
addCircleMarkers(radius = 2)
leaflet(sbr) |>
addTiles() |>
setView(lng = -42.8825, lat = -20.7546, zoom = 12) |>
addCircleMarkers(radius = 2)
# para mostrar os pontos (dos experimentos Soybean Rust) no mapa:
leaflet(sbr) |>
addTiles() |>
setView(lng = -42.8825, lat = -20.7546, zoom = 5) |>
addCircleMarkers(radius = 2)
# para mostrar os pontos (dos experimentos Soybean Rust) no mapa:
leaflet(sbr) |>
addTiles() |>
#setView(lng = -42.8825, lat = -20.7546, zoom = 5) |>
addCircleMarkers(radius = 2)
# para mudar o tema do mapa usar o providers$
leaflet() |>
addProviderTiles(providers$Esri.WorldStreetMap) |>
setView(lng = -42.8825, lat = -20.7546, zoom = 5)
# para mostrar os pontos (dos experimentos Soybean Rust) no mapa:
leaflet(sbr) |>
addTiles() |>
#setView(lng = -42.8825, lat = -20.7546, zoom = 5) |>
addCircleMarkers(radius = 2)
# para mostrar os pontos (dos experimentos Soybean Rust) no mapa:
leaflet(sbr) |>
addTiles() |>
setView(lng = -42.8825, lat = -20.7546, zoom = 5) |>
addCircleMarkers(radius = 2)
# para mostrar os pontos (dos experimentos Soybean Rust) no mapa:
leaflet(sbr) |>
addTiles() |>
setView(lng = -42.8825, lat = -20.7546, zoom = 5) |>
addCircleMarkers(radius = 2)
# para mostrar os pontos (dos experimentos Soybean Rust) no mapa:
library(leaflet)
library(htmlwidgets)
leaflet(sbr) |>
addTiles() |>
setView(lng = -42.8825, lat = -20.7546, zoom = 5) |>
addCircleMarkers(radius = 2)
# para mostrar os pontos (dos experimentos Soybean Rust) no mapa:
library(leaflet)
library(htmlwidgets)
leaflet(sbr) |>
addTiles() |>
setView(lng = -42.8825, lat = -20.7546, zoom = 5) |>
addCircleMarkers(radius = 2)
saveWidget(map, file = "mapa.html")
# para mostrar os pontos (dos experimentos Soybean Rust) no mapa:
library(leaflet)
library(htmlwidgets)
map <- leaflet(sbr) |>
addTiles() |>
setView(lng = -42.8825, lat = -20.7546, zoom = 5) |>
addCircleMarkers(radius = 2)
saveWidget(map, file = "mapa.html")
# para mostrar os pontos (dos experimentos Soybean Rust) no mapa:
library(leaflet)
library(htmlwidgets)
map <- leaflet(sbr) |>
addTiles() |>
setView(lng = -42.8825, lat = -20.7546, zoom = 5) |>
addCircleMarkers(radius = 2)
map
# para mostrar os pontos (dos experimentos Soybean Rust) no mapa:
library(leaflet)
library(htmlwidgets)
map <- leaflet(sbr) |>
addTiles() |>
setView(lng = -42.8825, lat = -20.7546, zoom = 5) |>
addCircleMarkers(radius = 2)
# Criar uma tag list com as dependências e o mapa
htmltools::tagList(
htmlwidgets::getDependency('leaflet', 'leaflet'),
map
)
#remotes::install_github(("ropensci/rnaturalearthhires"))
library(rnaturalearth)
library(rnaturalearthhires)
BRA <- ne_states(country = "Brazil", #contorno dos estados
returnclass = "sf")
PERU <- ne_countries(country = "Peru",
returnclass = "sf") #contorno do país
library(tidyverse)
ggplot(BRA) +
geom_sf(fill = "black",
color = "yellow",
linewidth = 1)
library(r4pde)
sbr <- RustSoybean
library(ggthemes)
sbr |>
ggplot(aes(longitude, latitude))+
geom_point()+
coord_sf()
ggplot(BRA) +
geom_sf(fill = "black",
color = "yellow",
linewidth = 1)+
geom_point(data = sbr, aes(longitude, latitude), color = "red")+
theme_map()
MG <- BRA |>
filter(name_en == "Minas Gerais")
ggplot(BRA) +
geom_sf(fill = "black",
color = "yellow",
linewidth = 1)+
geom_sf(data = MG, fill = "white")
geom_point(data = sbr, aes(longitude, latitude), color = "red")+
theme_map
geom_point(data = sbr, aes(longitude, latitude), color = "red")+
theme_map()
ggplot(BRA) +
geom_sf(fill = "black",
color = "yellow",
linewidth = 1)+
geom_sf(data = MG, fill = "white")+
geom_point(data = sbr, aes(longitude, latitude), color = "red")+
theme_map()
library(ggspatial)
ggplot(BRA) +
geom_sf(fill = "black",
color = "yellow",
linewidth = 1)+
geom_sf(data = MG, fill = "white")+
geom_point(data = sbr, aes(longitude, latitude), color = "red")+
theme_map()+
annotation_north_arrow(which_north = "grid")
library(plotly)
# Cria o objeto ggplot que será usado na função ggplotly do pacote plotly:
bra <- ggplot(BRA) +
geom_sf(fill = "black",
color = "yellow",
linewidth = 1)+
geom_sf(data = MG, fill = "white")+
geom_point(data = sbr, aes(longitude, latitude), color = "red")+
theme_map()+
annotation_north_arrow(which_north = "grid")
ggplotly(bra)
library(leaflet)
# mapa base:
leaflet() |>
addTiles() |>
setView(lng = -42.8825, lat = -20.7546, zoom = 12)
# para mudar o tema do mapa usar o providers$
leaflet() |>
addTiles(providers$Esri.WorldStreetMap) |>
setView(lng = -42.8825, lat = -20.7546, zoom = 5)
# para mostrar os pontos (dos experimentos Soybean Rust) no mapa:
leaflet(sbr) |>
addTiles() |>
setView(lng = -42.8825, lat = -20.7546, zoom = 5) |>
addCircleMarkers(radius = 2)
library(gsheet)
mapa <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1pAIFKsdKxk_UQQXdYwIO-O5NOkYNhpclImJcLziYnk4/edit?usp=sharing")
mapa <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1pAIFKsdKxk_UQQXdYwIO-O5NOkYNhpclImJcLziYnk4/edit?usp=sharing")
library(scatterpie)
library(ggrepel) #colocar o nome em cima de cada ponto
ggplot(BRA) +
geom_sf(fill = "gray70", alpha = 0.5, color = "white") +
coord_sf()+
geom_scatterpie(aes(x = lon, y = lat, r = 0.6), alpha = 0.8, color = NA, data = mapa,
cols = c("DFC",
"MA",
"FER",
"ANTR",
"OIDIO"))+
geom_text_repel(data = mapa, aes(lon, lat, label = Local),
size = 2, nudge_x = 0.2, nudge_y = 0.27, color = "gray30", family = "Arial") +
ggthemes::scale_fill_calc()+
ggthemes::theme_map() +
labs(x = "Longitude", y = "Latitude", legend = "", fill = "Doença")+
theme(legend.position = "bottom", text = element_text(family = "Arial", size = 8))
