{
  "hash": "ebdeed84a40cfa4df0651b65eab1e233",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Introdução\"\nmessage: false\nwarning: false\n---\n\n\nR é uma linguagem de programação e ambiente de software livre amplamente utilizado para análise estatística, visualização de dados e ciência de dados. Criado por Ross Ihaka e Robert Gentleman na década de 1990, R teve sua primeira versão estável lançada em 2000 e, desde então, tem crescido em popularidade devido a suas poderosas capacidades e à forte comunidade de usuários e desenvolvedores.\n\nEmbora seja perfeitamente possível usar apenas a instalação básica do R, muitas pessoas preferem utilizar um ambiente de desenvolvimento integrado (IDE) para uma experiência mais eficiente e amigável. Um dos IDEs mais populares para R é o RStudio.\n\nRStudio é um complemento do R que oferece uma interface mais intuitiva e funcionalidades avançadas para facilitar seu trabalho com R.\n\nPara fazer o download dos programas [clique aqui](https://posit.co/download/rstudio-desktop/#download).\n\n# Começando um projeto no RStudio\n\nManter seus projetos organizados é crucial para facilitar o entendimento dos códigos no momento das análises e principalmente no futuro.\n\n## Passos para Começar um Projeto Organizado\n\n1.  **Criar um Projeto no RStudio**\n\n    -   Inicie o RStudio e vá para `File > New Project`.\n\n    -   Siga as instruções para criar um novo projeto. Isso ajudará a manter todos os arquivos relacionados ao seu projeto em um único diretório.\n\n2.  **Criar Arquivos Quarto Markdown**\n\n    -   Use Quarto Markdown para combinar conteúdo e código executável em um documento finalizado.\n\n    -   No RStudio, vá para `File > New File > Quarto Document` para criar um novo arquivo .qmd.\n\nUtilizar o Quarto Markdown permite a criação de documentos dinâmicos que integram texto e código, facilitando a análise reprodutível e a comunicação dos resultados.\n\n# Pacotes R\n\n\"Você pode pensar em um pacote como uma coleção de funções, dados e arquivos de ajuda agrupados em uma estrutura padrão bem definida que você pode baixar e instalar em R\" (Intro to R, n.d.).\n\nReferência: Intro to R. (n.d.). Packages. Retrieved from <https://intro2r.com/packages.html>\n\nEsses pacotes podem ser obtidos de diversas fontes, sendo as mais populares o CRAN, o Bioconductor e o GitHub.\n\n## Para instalar pacotes do CRAN:\n\nPara instalar um pacote do CRAN você pode usar a função `install.packages()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Exemplo:\n#install.packages(\"nome do pacote de interesse\")\n```\n:::\n\n\nÉ uma boa prática atualizar periodicamente os pacotes instalados para acessar novas funcionalidades e correções de bugs. Para atualizar pacotes do CRAN, você pode usar a função `update.packages()`.\n\n## Para instalar pacotes do GitHub:\n\nHá várias maneiras de instalar pacotes hospedados no GitHub, mas uma das mais eficientes é utilizar a função `install_github()` do pacote remotes. Antes de usar esta função, é necessário saber o nome de usuário do GitHub do proprietário do repositório e o nome do próprio repositório.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Exemplo:\nremotes::install_github(\"emdelponte/r4pde\")\n```\n:::\n\n\n## Carregamento de pacotes:\n\nDepois de instalar um pacote em seu computador, ele não está imediatamente disponível para uso. Para utilizar um pacote, você precisa carregá-lo utilizando a função `library()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Exemplo:\nlibrary(tidyverse)\n```\n:::\n\n\nA função `library()` também carregará quaisquer pacotes adicionais necessários e poderá imprimir informações adicionais do pacote.\n\n*Dica*: colocar todos pacotes necessários para a análise no topo dos scripts em um chunk específico para torná-los mais acessíveis e fáceis de encontrar.\n\nAs vezes, pode ser útil usar uma função sem primeiro usar a função `library()`. Por exemplo, se for utilizar apenas uma ou duas funções em seu script e não quiser carregar o pacote completo, poderá acessar a função diretamente, basta especificar o nome do pacote seguido de :: e o nome da função.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Exemplo:\n#tidyverse::select()\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}